client 안의 폴더들은 client 안의 부분에 cra를 설치함으로써 자동적으로 생성된 부분이다.
-----------------------------
npm install create-react-app 을 하면 create-react-app 패키지를 해당 디렉토리 루트에 node_modules폴더를 생성하고 거기에 다운로드가 된다.

npx 는  그 패키지를 로컬에 다운로드 받지 않고 바로 실행해서 리액트앱을 생성하게 된다.

npx create-react-app <디렉토리 이름>

npx crate-react-app . 이렇게 하면 현재 디렉토리에 설치하는 것이고, 폴더 이름을 적으면 해당 이름의 폴더를 생성한 후 리액트 앱을 설치하게 된다.
----------------------------------
Auth(HOC)
참고2 이미지의 내용은 Auth(HOC) 안에 여러 가지 컴포넌트들을 넣어놓고, 자동적으로 Auth(HOC) 가 유저가 자격이 되는지 안되는지 판단하여 다음 액션을 취할 수 있게 해준다. 자격 뿐만 아니라 다른 기능들도  Auth(HOC)안에 넣어서 Auth(HOC)안의 컴포넌트들이 Auth(HOC)의 기능을 이용할 수 있다.
-------------------------------------
Data Request, Response Flow 그리고 Axios
로그인을 할때 클라이언트에서 유저가 로그인 정보를 입력할 것이다.
그다음 로그인버튼을 누르면 request가 서버로 가서 서버에서 db에 유저 아이디가 있는지 찾고 있으면 비밀번호가 그 유저에 맞게 입력되었는지 체크
맞으면 response를 맞다고 보내고 틀리거나 유저가 없으면 그런 것 또한 response로 유저에게 보낸다.

request를 보낼때 axios를 사용한다.
----------------------------
두개의 다른 포트를 가지고 있는 서버는 아무 설정없이 request를 보낼 수 없다.

cors 정책 Cross-Origin Resouce Sharing 의 약자로 한마디로 보안정책이다 각 포트가 origin 이고 resouce를 sharing할때 적용되는데 cors정책이다.

이걸 해결하기 위해서는 Proxy 를 대표적으로 사용할 수 있다.